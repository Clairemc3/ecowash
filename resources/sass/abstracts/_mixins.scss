// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}


// Center containers
@mixin center($width) {
  width: $width;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
}


// Create a flex container
@mixin flexy(
$display: flex,
$dir: null,
$wrap: null,
$justify: null,
$align: null) {
display: $display;
flex-direction: $dir;
flex-wrap: $wrap;
justify-content: $justify;
align-items: $align;
}


@mixin themeColors {
  padding: 10px;
  border-radius: 5px;
  font-size: 0.8em;
  font-weight: bold;
}


// Media queries 
@mixin mediaQuery($break) {
$value: map-get($breakpoints, $break);	
$small: map-get($breakpoints, 'small');
          
@if $value == null {
  @warn "#{$break} is not a valid breakpoint name";
}
@else if $value < $small {
  @media (max-width: $value){
    @content;
  }
}	
@else {
  @media (min-width: $value) {
    @content;
  }
}
}

